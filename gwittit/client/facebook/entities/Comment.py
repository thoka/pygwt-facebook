# package com.gwittit.client.facebook.entities

import java
from java import *
from com.google.gwt.core.client.JavaScriptObject import JavaScriptObject
from gwittit.client.facebook import Json

#  Stream Comment
#  @see http://wiki.developers.facebook.com/index.php/Stream.getComments
#  @author olamar72

class Comment(JavaScriptObject):

    
    @java.init
    def __init__(self, *a, **kw):
        pass
    
    @java.protected
    @__init__.register
    @java.typed()
    def __init__(self, ):
        self.__init__._super()
    
    @java.final
    @java.native
    def getXid(self):
        """
        The external ID of the fb:comments being queried. You can specify more
        than one XID.
        """
    
    @java.final
    @java.native
    def getPostId(self):
        """
        The ID of the post in the stream.
        """
    
    @java.private
    @java.final
    @java.native
    def getFromIdString(self):
        """
        The user submitting a comment.
        """
    
    @java.final
    def getFromId(self):
        """
        The user who added the comment.
        """
        return Long(self.getFromIdString())
    
    @java.final
    @java.native
    def getText(self):
        """
        A unix timestamp associated with the creation time of a comment.
        """
    
    @java.final
    @java.native
    def getId(self):
        """
        A unique ID for a given XID for each comment.
        """
    
    @java.final
    @java.native
    def getUsername(self):
        """
        The user name that a user entered when they posted a comment. In these
        cases, the fromid returned will be 0. Note that user names for valid
        users are not returned here.
        """
    
    @java.final
    @java.native
    def replyXid(self):
        """
        The target XID for Feed stories generated by the user; applications can
        retrieve comments made to that story by calling this XID.
        """
    
    @java.final
    @java.static
    @java.typed(String, String)
    def createComment(self, xid, comment):
        """
        Create a comment object with xid and comment. This object can be passed
        directly to a native javascript function.
        
        @return Comment object
        """
        j = Json()
        j.put(u"xid", xid).put(u"text", comment)
        return self.fromJson(java.str(j))
    
    @java.static
    @java.native
    @java.typed(String)
    def fromJson(self, jsonString):
        pass
